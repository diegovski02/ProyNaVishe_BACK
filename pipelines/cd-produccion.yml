trigger:
  - Produccion

variables:
  - group: GitHubSecrets
  - name: AZURE_TOKEN
    value: $(AZURE_TOKEN)

pool:
  name: 'Default'

steps:
# Paso 1: Verificar el agente
- script: echo 'Iniciando Deploy a Producción...'
  displayName: 'Verificar Agente'

# Paso 2: Despliegue (personalizable)
# Aquí puedes poner AzureWebApp o cualquier otra acción de despliegue real.
# - task: AzureWebApp@1
#   inputs:
#     azureSubscription: '<NOMBRE-CONEXIÓN-SERVICIO>'
#     appName: '<NOMBRE-WEBAPP>'
#     package: '$(System.DefaultWorkingDirectory)/**/*.zip'
#   displayName: 'Desplegar a Producción'

- script: |
    echo 'Iniciando Deploy a Producción...'
    git config --global user.email "dvegacajas2@gmail.com"
    git config --global user.name "Diego Vega"

    rem Clonamos solo la rama Producción desde GitHub
    git clone --single-branch --branch Produccion https://$(GITHUB_TOKEN)@github.com/diegovski02/ProyNaVishe_BACK.git repo-tmp
    cd repo-tmp

    rem Agregamos Azure como remoto si no existe
    git remote add azure https://$(AZURE_TOKEN)@dev.azure.com/diegovega2/ProyNaVishe/_git/ProyNaVishe_BACK.git || echo "Remote Azure ya existe"

    rem Traemos los últimos cambios de la rama Producción desde Azure
    git pull azure Produccion --rebase

    rem Hacemos un commit si es necesario
    git commit --allow-empty -m "Actualizando desde Azure a GitHub"

    rem Empujamos forzosamente al repositorio de GitHub (sin conflictos)
    git push origin Produccion --force
  displayName: "Push forzado desde Azure a GitHub (Producción limpio)"
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'Produccion'))