trigger:
  - Produccion

variables:
  - group: GitHubSecrets

pool:
  name: 'Default'

steps:
# Paso 1: Verificar el agente
- script: echo Iniciando Deploy a Producción...
  displayName: 'Verificar Agente'

# Paso 2: Despliegue (personalizable)
# Descomenta y configura si estás usando App Service, AKS, etc.
# - task: AzureWebApp@1
#   inputs:
#     azureSubscription: '<NOMBRE-CONEXIÓN-SERVICIO>'
#     appName: '<NOMBRE-WEBAPP>'
#     package: '$(System.DefaultWorkingDirectory)/**/*.zip'
#   displayName: 'Desplegar a Producción'

# Paso 3: Notificación final
- script: echo "🚀 Despliegue completado en Producción"
  displayName: 'Finalización del Deploy'

# Paso 4: Push automático desde Azure a GitHub (sin errores de conflicto)
- script: |
    git config --global user.email "dvegacajas2@gmail.com"
    git config --global user.name "Diego Vega"

    rem Clona el repositorio con token de GitHub
    git clone https://$(GITHUB_TOKEN)@github.com/diegovski02/ProyNaVishe_BACK.git repo-tmp
    cd repo-tmp

    rem Trae cambios desde GitHub
    git pull origin $(Build.SourceBranchName) --rebase

    rem Conecta con el repo de Azure si no está
    git remote add azure $(Build.Repository.Uri) || echo "Remote ya existe"
    git pull azure $(Build.SourceBranchName) --rebase

    rem Empuja la rama de Producción de Azure a GitHub
    git push origin HEAD:$(Build.SourceBranchName)
  displayName: "Push automático a GitHub desde Azure (Producción)"
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'Produccion'))
