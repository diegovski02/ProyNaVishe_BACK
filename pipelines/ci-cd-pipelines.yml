trigger:
- main

variables:
  - group: GitHubSecrets
  - group: AZURE_TOKEN

pool:
  name: 'Default'

steps:
- script: echo 'Verificando agente disponible...'
  displayName: 'Verificar Agente'

- script: |
    echo "Verificando AZURE_TOKEN..."
    echo $(AZURE_TOKEN)  # Esto imprimirá el valor del AZURE_TOKEN
  displayName: 'Verificar AZURE_TOKEN'

- script: |
    echo "Verificando GITHUB_TOKEN..."
    echo $(GITHUB_TOKEN)  # Esto imprimirá el valor del GITHUB_TOKEN
  displayName: 'Verificar GITHUB_TOKEN'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '$(System.DefaultWorkingDirectory)/target/surefire-reports/TEST-*.xml'
    testRunTitle: 'Resultados de Pruebas Backend'

- script: |
    rem Configuramos los usuarios de git
    git config --global user.email "dvegacajas2@gmail.com"
    git config --global user.name "Diego Vega"

    rem Clonamos la rama Main desde Azure con el token de Azure
    git clone --mirror $(Build.Repository.Uri) repo-tmp
    cd repo-tmp

    rem Eliminamos el remoto GitHub si ya existe
    git remote remove github || echo "Remote GitHub no existe"

    rem Agregamos el remoto de GitHub con el token de GitHub
    git remote add github https://$(GITHUB_TOKEN):x-oauth-basic@github.com/diegovski02/ProyNaVishe_BACK.git

    rem Reseteamos la rama Main de GitHub para que sea idéntica a la de Azure
    git fetch azure main
    git reset --hard azure/main

    rem Realizamos el push forzado para sobrescribir la rama Main en GitHub
    git push github --mirror
  displayName: "Push desde Azure a GitHub (Main limpio)"
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))